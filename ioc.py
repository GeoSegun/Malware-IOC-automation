import pandas as pd


file = ('workdata.csv') #Path to the file

dt = pd.read_csv(file, header=None)
dt.columns = ['sn', 'Values', 'IOCs']  #Give the dataframe a title

dt = dt.drop(['sn'], axis=1) #This is used to drop the first column and update the dataframe

dt = dt.iloc[:,[1,0]] #Rearranging the column

dt['Values'] = dt['Values'].astype(str)

# Create the unique value columns
for unique_type in dt['IOCs'].unique():
    dt[unique_type] = dt[dt['IOCs'] == unique_type]['Values']

# Drop the original 'value' and 'type' columns
dt = dt.drop(['Values', 'IOCs'], axis=1)

# Replace NaN values with None
dt = dt.where((pd.notnull(dt)), None)
dt.fillna("", inplace=True)

# create a new DataFrame to store the results
new_data = {'FILEHASH-MD5': [], 'FILEHASH-sha-1': [], 'FILEHASH-sha-256': []}
new_df = pd.DataFrame(new_data)

# loop through each element in the third column
for hash in dt['Hash']:
    if len(hash) == 32:
        new_df = new_df.append({'FILEHASH-MD5': hash}, ignore_index=True)
    elif len(hash) == 42:
        new_df = new_df.append({'FILEHASH-sha-1': hash}, ignore_index=True)
    elif len(hash) == 64:
        new_df = new_df.append({'FILEHASH-sha-256': hash}, ignore_index=True)

dt.drop(['Hash'], axis=1)
# Concatenate the two dataframes
result = pd.concat([dt, new_df], axis=1)
final = result.drop(['Hash'], axis=1) #used to drop the Hash column

col= final.columns[::-1]
final= final[col]

# Save the result as a new dataframe
final.to_csv('joined_dataframe.csv', index=False)
